{"ast":null,"code":"var _jsxFileName = \"/Users/brandongottshall/GDrive/dogPark/components/ProjectGrid.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport ProjectSquare from \"./shared/ProjectSquare\";\nexport default function ProjectGrid({\n  data,\n  type\n}) {\n  //type can be used to switch update/news\n  const projectsData = data || Array(20).fill({\n    name: 'Project Name'\n  });\n  const squares = projectsData.map((data, i) => __jsx(ProjectSquare, {\n    data: data,\n    i: i,\n    id: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 51\n    }\n  }));\n  const grid = `w-screen overflow-x-scroll grid grid-rows-2 grid-cols-${projectsData.length / 2} col-gap-0 no-scrollbar justify-between no-wrap ml-2`;\n  return __jsx(\"div\", {\n    style: {\n      gridTemplateColumns: `repeat(${projectsData.length / 2}, 250px)`\n    },\n    className: grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, squares);\n}","map":{"version":3,"sources":["/Users/brandongottshall/GDrive/dogPark/components/ProjectGrid.jsx"],"names":["ProjectSquare","ProjectGrid","data","type","projectsData","Array","fill","name","squares","map","i","grid","length","gridTemplateColumns"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,wBAA1B;AACA,eAAe,SAASC,WAAT,CAAqB;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAArB,EAAmC;AAAE;AAChD,QAAMC,YAAY,GAAGF,IAAI,IAAIG,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAe;AACxCC,IAAAA,IAAI,EAAE;AADkC,GAAf,CAA7B;AAGA,QAAMC,OAAO,GAAGJ,YAAY,CAACK,GAAb,CAAiB,CAACP,IAAD,EAAOQ,CAAP,KAAa,MAAC,aAAD;AAAe,IAAA,IAAI,EAAER,IAArB;AAA2B,IAAA,CAAC,EAAEQ,CAA9B;AAAiC,IAAA,EAAE,EAAEA,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B,CAAhB;AACA,QAAMC,IAAI,GAAI,yDAAwDP,YAAY,CAACQ,MAAb,GAAoB,CAAE,sDAA5F;AACA,SACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,mBAAmB,EAAG,UAAST,YAAY,CAACQ,MAAb,GAAoB,CAAE;AAAtD,KAAZ;AAA8E,IAAA,SAAS,EAAED,IAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,OADL,CADJ;AAKH","sourcesContent":["import ProjectSquare from \"./shared/ProjectSquare\"\nexport default function ProjectGrid({data, type}) { //type can be used to switch update/news\n    const projectsData = data || Array(20).fill({\n        name: 'Project Name'\n    })\n    const squares = projectsData.map((data, i) => <ProjectSquare data={data} i={i} id={i}/>)\n    const grid = `w-screen overflow-x-scroll grid grid-rows-2 grid-cols-${projectsData.length/2} col-gap-0 no-scrollbar justify-between no-wrap ml-2`\n    return(\n        <div style={{gridTemplateColumns: `repeat(${projectsData.length/2}, 250px)`}} className={grid}>\n            {squares}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}