{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nvar api = axios.create({\n  baseURL: false ? 'https://dogpark-backend.herokuapp.com' : 'http://localhost:3000'\n}); // ====================================\n// ============= Auth =================\n// ====================================\n// export const loginUser = async (loginData) => {\n//   const resp = await api.post('/auth/login', { auth: loginData });\n//   localStorage.setItem('authToken', resp.data.token);\n//   api.defaults.headers.common.authorization = `Bearer ${resp.data.token}`;\n//   return resp.data.user;\n// }\n// export const registerUser = async (registerData) => {\n//   const resp = await api.post('/users/', { user: registerData })\n//   localStorage.setItem('authToken', resp.data.token);\n//   api.defaults.headers.common.authorization = `Bearer ${resp.data.token}`\n//   return resp.data.user\n// }\n// export const verifyUser = async () => {\n//   const token = localStorage.getItem('authToken');\n//   if (token) {\n//     api.defaults.headers.common.authorization = `Bearer ${token}`\n//     const resp = await api.get('/auth/verify');\n//     return resp.data\n//   }\n//   return false\n// }\n// export const removeToken = () => {\n//   api.defaults.headers.common.authorization = null;\n// }\n// ====================================\n// ============= Resources ================\n// ====================================\n\nexport var getMyTeamAndProjects = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var resp;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return api.get('/users/1/team');\n\n          case 2:\n            resp = _context.sent;\n            return _context.abrupt(\"return\", resp.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getMyTeamAndProjects() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getTeamUpdates = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var resp;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return api.get('/updates');\n\n          case 2:\n            resp = _context2.sent;\n            return _context2.abrupt(\"return\", resp.data);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getTeamUpdates() {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/brandongottshall/GDrive/dogPark/public/helper/api-helper.js"],"names":["axios","api","create","baseURL","getMyTeamAndProjects","get","resp","data","getTeamUpdates"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAE,QAAwC,uCAAxC,GAAkF;AADpE,CAAb,CAAZ,C,CAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;;AAEA,OAAO,IAAMC,oBAAoB;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACfH,GAAG,CAACI,GAAJ,CAAQ,eAAR,CADe;;AAAA;AAC5BC,YAAAA,IAD4B;AAAA,6CAE3BA,IAAI,CAACC,IAFsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAApBH,oBAAoB;AAAA;AAAA;AAAA,GAA1B;AAKP,OAAO,IAAMI,cAAc;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACTP,GAAG,CAACI,GAAJ,CAAQ,UAAR,CADS;;AAAA;AACtBC,YAAAA,IADsB;AAAA,8CAErBA,IAAI,CAACC,IAFgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdC,cAAc;AAAA;AAAA;AAAA,GAApB","sourcesContent":["import axios from 'axios'\nconst api = axios.create({\n  baseURL: process.env.NODE_ENV === 'production' ? 'https://dogpark-backend.herokuapp.com' : 'http://localhost:3000'\n});\n\n// ====================================\n// ============= Auth =================\n// ====================================\n\n// export const loginUser = async (loginData) => {\n//   const resp = await api.post('/auth/login', { auth: loginData });\n//   localStorage.setItem('authToken', resp.data.token);\n//   api.defaults.headers.common.authorization = `Bearer ${resp.data.token}`;\n//   return resp.data.user;\n// }\n\n// export const registerUser = async (registerData) => {\n//   const resp = await api.post('/users/', { user: registerData })\n//   localStorage.setItem('authToken', resp.data.token);\n//   api.defaults.headers.common.authorization = `Bearer ${resp.data.token}`\n//   return resp.data.user\n// }\n\n// export const verifyUser = async () => {\n//   const token = localStorage.getItem('authToken');\n//   if (token) {\n//     api.defaults.headers.common.authorization = `Bearer ${token}`\n//     const resp = await api.get('/auth/verify');\n//     return resp.data\n//   }\n//   return false\n// }\n\n\n// export const removeToken = () => {\n//   api.defaults.headers.common.authorization = null;\n// }\n\n\n// ====================================\n// ============= Resources ================\n// ====================================\n\nexport const getMyTeamAndProjects = async () => {\n  const resp = await api.get('/users/1/team');\n  return resp.data;\n}\n\nexport const getTeamUpdates = async () => {\n  const resp = await api.get('/updates');\n  return resp.data;\n}\n"]},"metadata":{},"sourceType":"module"}