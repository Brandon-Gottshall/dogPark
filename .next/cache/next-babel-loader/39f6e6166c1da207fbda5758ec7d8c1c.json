{"ast":null,"code":"var _jsxFileName = \"/Users/brandongottshall/GDrive/dogPark/components/Dash.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useSWR from 'swr';\n\nfunction Profile() {\n  const {\n    data,\n    error\n  } = useSWR('/api/user', fetch);\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 21\n    }\n  }, \"failed to load\");\n  if (!data) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 21\n    }\n  }, \"loading...\");\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 10\n    }\n  }, \"hello \", data.name, \"!\");\n}\n\nimport Users from './shared/Users';\nimport Feed from './shared/Feed';\nimport { getMyTeamAndProjects } from '../public/helper/api-helper';\nimport { useState, useEffect } from 'react';\nimport ProjectGrid from './ProjectGrid';\nexport default function Dash() {\n  const {\n    0: userData,\n    1: setUserData\n  } = useState([]);\n  useEffect(() => {\n    const data = getMyTeamAndProjects();\n    data.then(value => setUserData(value));\n  }, []);\n  return __jsx(\"div\", {\n    className: \"w-full mt-6 h-full text-center text-black font-f1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    className: \"font-f1 text-left ml-4 tracking-wide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"My Team\"), __jsx(Users, {\n    userData: userData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), __jsx(\"h3\", {\n    className: \"font-f1 text-left mt-6 ml-4 tracking-wide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"Latest News\"), __jsx(Feed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), __jsx(\"h3\", {\n    className: \"font-f1 text-left mt-6 ml-4 tracking-wide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"Project Teams\"), __jsx(ProjectGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/brandongottshall/GDrive/dogPark/components/Dash.jsx"],"names":["useSWR","Profile","data","error","fetch","name","Users","Feed","getMyTeamAndProjects","useState","useEffect","ProjectGrid","Dash","userData","setUserData","then","value"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,KAAnB;;AACA,SAASC,OAAT,GAAmB;AACjB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBH,MAAM,CAAC,WAAD,EAAcI,KAAd,CAA9B;AACA,MAAID,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACX,MAAI,CAACD,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACX,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAYA,IAAI,CAACG,IAAjB,MAAP;AACD;;AACD,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,oBAAT,QAAoC,6BAApC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,eAAe,SAASC,IAAT,GAAgB;AAE7B,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BL,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMR,IAAI,GAAGM,oBAAoB,EAAjC;AACAN,IAAAA,IAAI,CAACa,IAAL,CAAWC,KAAD,IAAUF,WAAW,CAACE,KAAD,CAA/B;AACC,GAHM,EAGJ,EAHI,CAAT;AAKE,SACI;AAAK,IAAA,SAAS,EAAC,mDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,sCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,MAAC,KAAD;AAAO,IAAA,QAAQ,EAAEH,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAII;AAAI,IAAA,SAAS,EAAC,2CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,EAKI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAOI;AAAI,IAAA,SAAS,EAAC,2CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPJ,EAQI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ;AAYH","sourcesContent":["import useSWR from 'swr'\nfunction Profile() {\n  const { data, error } = useSWR('/api/user', fetch)\n  if (error) return <div>failed to load</div>\n  if (!data) return <div>loading...</div>\n  return <div>hello {data.name}!</div>\n}\nimport Users from './shared/Users'\nimport Feed from './shared/Feed'\nimport { getMyTeamAndProjects} from '../public/helper/api-helper'\nimport { useState, useEffect } from 'react'\nimport ProjectGrid from './ProjectGrid'\nexport default function Dash() {\n\n  const [userData, setUserData] = useState([])\n\n  useEffect(() => {\n    const data = getMyTeamAndProjects();\n    data.then((value) =>setUserData(value))\n    }, [])\n\n    return(\n        <div className=\"w-full mt-6 h-full text-center text-black font-f1\">\n            <h3 className=\"font-f1 text-left ml-4 tracking-wide\">My Team</h3>\n            <Users userData={userData} />\n\n            <h3 className=\"font-f1 text-left mt-6 ml-4 tracking-wide\">Latest News</h3>\n            <Feed />\n\n            <h3 className=\"font-f1 text-left mt-6 ml-4 tracking-wide\">Project Teams</h3>\n            <ProjectGrid />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}