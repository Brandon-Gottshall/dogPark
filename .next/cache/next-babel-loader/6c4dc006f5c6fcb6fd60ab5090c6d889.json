{"ast":null,"code":"var _jsxFileName = \"/Users/brandongottshall/GDrive/dogPark/components/shared/ProjectGrid.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nexport default function ProjectGrid({\n  data,\n  type\n}) {\n  //type can be used to switch update/news\n  const iconSelector = rand => {\n    switch (rand) {\n      case 1:\n        break;\n\n      case 2:\n        break;\n\n      case 3:\n        break;\n\n      case 4:\n        break;\n\n      default:\n        console.log(`iconSelector Error: Recieved Invalid aurgument ${rand} . This aurgument needs to be int 1-4`);\n        break;\n    }\n  };\n\n  const projectsData = data || Array(20).fill({\n    name: 'Project Id',\n    icon: iconSelector(Math.floor(random() * 12))\n  });\n  const cards = feedData.map((data, i) => __jsx(FeedCard, {\n    data: data,\n    id: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 45\n    }\n  }));\n  const grid = `w-screen overflow-x-scroll grid grid-rows-2 grid-cols-${feedData.length / 2} col-gap-0 no-scrollbar justify-between no-wrap`;\n  return __jsx(\"div\", {\n    style: {\n      gridTemplateColumns: `repeat(${feedData.length / 2}, 350px)`\n    },\n    className: grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, cards);\n}","map":{"version":3,"sources":["/Users/brandongottshall/GDrive/dogPark/components/shared/ProjectGrid.jsx"],"names":["ProjectGrid","data","type","iconSelector","rand","console","log","projectsData","Array","fill","name","icon","Math","floor","random","cards","feedData","map","i","grid","length","gridTemplateColumns"],"mappings":";;;AACA,eAAe,SAASA,WAAT,CAAqB;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAArB,EAAmC;AAAE;AAChD,QAAMC,YAAY,GAAGC,IAAI,IAAI;AACzB,YAAQA,IAAR;AACI,WAAK,CAAL;AAEI;;AACJ,WAAK,CAAL;AAEI;;AACJ,WAAK,CAAL;AAEI;;AACJ,WAAK,CAAL;AAEI;;AACJ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAa,kDAAiDF,IAAK,uCAAnE;AACI;AAfR;AAiBH,GAlBD;;AAmBA,QAAMG,YAAY,GAAGN,IAAI,IAAIO,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAe;AACxCC,IAAAA,IAAI,EAAE,YADkC;AAExCC,IAAAA,IAAI,EAAER,YAAY,CAACS,IAAI,CAACC,KAAL,CAAWC,MAAM,KAAG,EAApB,CAAD;AAFsB,GAAf,CAA7B;AAIA,QAAMC,KAAK,GAAGC,QAAQ,CAACC,GAAT,CAAa,CAAChB,IAAD,EAAOiB,CAAP,KAAa,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEjB,IAAhB;AAAsB,IAAA,EAAE,EAAEiB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA1B,CAAd;AACA,QAAMC,IAAI,GAAI,yDAAwDH,QAAQ,CAACI,MAAT,GAAgB,CAAE,iDAAxF;AACA,SACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,mBAAmB,EAAG,UAASL,QAAQ,CAACI,MAAT,GAAgB,CAAE;AAAlD,KAAZ;AAA0E,IAAA,SAAS,EAAED,IAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,KADL,CADJ;AAKH","sourcesContent":["\nexport default function ProjectGrid({data, type}) { //type can be used to switch update/news\n    const iconSelector = rand => {\n        switch (rand) {\n            case 1:\n\n                break;\n            case 2:\n\n                break;\n            case 3:\n\n                break;\n            case 4:\n\n                break;\n            default:\n            console.log(`iconSelector Error: Recieved Invalid aurgument ${rand} . This aurgument needs to be int 1-4`)\n                break;\n        }\n    }\n    const projectsData = data || Array(20).fill({\n        name: 'Project Id',\n        icon: iconSelector(Math.floor(random()*12))\n    })\n    const cards = feedData.map((data, i) => <FeedCard data={data} id={i}/>)\n    const grid = `w-screen overflow-x-scroll grid grid-rows-2 grid-cols-${feedData.length/2} col-gap-0 no-scrollbar justify-between no-wrap`\n    return(\n        <div style={{gridTemplateColumns: `repeat(${feedData.length/2}, 350px)`}} className={grid}>\n            {cards}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}