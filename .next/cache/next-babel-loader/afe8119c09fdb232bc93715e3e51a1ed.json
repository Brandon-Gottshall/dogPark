{"ast":null,"code":"const api = axios.create({\n  baseURL: false ? 'https://dogpark-backend.herokuapp.com' : 'http://localhost:3000'\n}); // ====================================\n// ============= Auth =================\n// ====================================\n// export const loginUser = async (loginData) => {\n//   const resp = await api.post('/auth/login', { auth: loginData });\n//   localStorage.setItem('authToken', resp.data.token);\n//   api.defaults.headers.common.authorization = `Bearer ${resp.data.token}`;\n//   return resp.data.user;\n// }\n// export const registerUser = async (registerData) => {\n//   const resp = await api.post('/users/', { user: registerData })\n//   localStorage.setItem('authToken', resp.data.token);\n//   api.defaults.headers.common.authorization = `Bearer ${resp.data.token}`\n//   return resp.data.user\n// }\n// export const verifyUser = async () => {\n//   const token = localStorage.getItem('authToken');\n//   if (token) {\n//     api.defaults.headers.common.authorization = `Bearer ${token}`\n//     const resp = await api.get('/auth/verify');\n//     return resp.data\n//   }\n//   return false\n// }\n// export const removeToken = () => {\n//   api.defaults.headers.common.authorization = null;\n// }\n// ====================================\n// ============= Resources ================\n// ====================================\n\nexport const getMyTeamAndProjects = async () => {\n  const resp = await api.get('/users/1/team');\n  return resp.data;\n};\nexport const getTeamUpdates = async () => {\n  const resp = await api.get('/updates');\n  return resp.data;\n};","map":{"version":3,"sources":["/Users/brandongottshall/GDrive/dogPark/public/helper/api-helper.js"],"names":["api","axios","create","baseURL","getMyTeamAndProjects","resp","get","data","getTeamUpdates"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,KAAK,CAACC,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAE,QAAwC,uCAAxC,GAAkF;AADpE,CAAb,CAAZ,C,CAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;;AAEA,OAAO,MAAMC,oBAAoB,GAAG,YAAY;AAC9C,QAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,GAAJ,CAAQ,eAAR,CAAnB;AACA,SAAOD,IAAI,CAACE,IAAZ;AACD,CAHM;AAKP,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMH,IAAI,GAAG,MAAML,GAAG,CAACM,GAAJ,CAAQ,UAAR,CAAnB;AACA,SAAOD,IAAI,CAACE,IAAZ;AACD,CAHM","sourcesContent":["const api = axios.create({\n  baseURL: process.env.NODE_ENV === 'production' ? 'https://dogpark-backend.herokuapp.com' : 'http://localhost:3000'\n});\n\n// ====================================\n// ============= Auth =================\n// ====================================\n\n// export const loginUser = async (loginData) => {\n//   const resp = await api.post('/auth/login', { auth: loginData });\n//   localStorage.setItem('authToken', resp.data.token);\n//   api.defaults.headers.common.authorization = `Bearer ${resp.data.token}`;\n//   return resp.data.user;\n// }\n\n// export const registerUser = async (registerData) => {\n//   const resp = await api.post('/users/', { user: registerData })\n//   localStorage.setItem('authToken', resp.data.token);\n//   api.defaults.headers.common.authorization = `Bearer ${resp.data.token}`\n//   return resp.data.user\n// }\n\n// export const verifyUser = async () => {\n//   const token = localStorage.getItem('authToken');\n//   if (token) {\n//     api.defaults.headers.common.authorization = `Bearer ${token}`\n//     const resp = await api.get('/auth/verify');\n//     return resp.data\n//   }\n//   return false\n// }\n\n\n// export const removeToken = () => {\n//   api.defaults.headers.common.authorization = null;\n// }\n\n\n// ====================================\n// ============= Resources ================\n// ====================================\n\nexport const getMyTeamAndProjects = async () => {\n  const resp = await api.get('/users/1/team');\n  return resp.data;\n}\n\nexport const getTeamUpdates = async () => {\n  const resp = await api.get('/updates');\n  return resp.data;\n}\n"]},"metadata":{},"sourceType":"module"}