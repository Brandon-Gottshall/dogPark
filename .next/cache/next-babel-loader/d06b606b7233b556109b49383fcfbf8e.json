{"ast":null,"code":"var _jsxFileName = \"/Users/brandongottshall/GDrive/dogPark/components/shared/Feed.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport FeedCard from './FeedCard';\nexport default function Feed(_ref) {\n  var _this = this;\n\n  var data = _ref.data,\n      type = _ref.type;\n  //type can be used to switch update/news\n  var feedData = data || Array(20).fill({});\n  var cards = feedData.map(function () {\n    return __jsx(FeedCard, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4,\n        columnNumber: 38\n      }\n    });\n  });\n  var gridColums = \"gridTemplateColumns: 'repeat(\".concat(feedData.length / 2, \", 300px)'\");\n  var grid = \"w-screen overflow-x-scroll grid grid-rows-2 grid-cols-\".concat(feedData.length / 2, \" col-gap-0 no-scrollbar justify-between no-wrap\");\n  return __jsx(\"div\", {\n    style: gridColumns,\n    className: grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, cards);\n}\n_c = Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/Users/brandongottshall/GDrive/dogPark/components/shared/Feed.jsx"],"names":["FeedCard","Feed","data","type","feedData","Array","fill","cards","map","gridColums","length","grid","gridColumns"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,eAAe,SAASC,IAAT,OAA4B;AAAA;;AAAA,MAAbC,IAAa,QAAbA,IAAa;AAAA,MAAPC,IAAO,QAAPA,IAAO;AAAE;AACzC,MAAMC,QAAQ,GAAGF,IAAI,IAAIG,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAe,EAAf,CAAzB;AACA,MAAMC,KAAK,GAAGH,QAAQ,CAACI,GAAT,CAAa;AAAA,WAAM,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAN;AAAA,GAAb,CAAd;AACA,MAAMC,UAAU,0CAAmCL,QAAQ,CAACM,MAAT,GAAgB,CAAnD,cAAhB;AACA,MAAMC,IAAI,mEAA4DP,QAAQ,CAACM,MAAT,GAAgB,CAA5E,oDAAV;AACA,SACI;AAAK,IAAA,KAAK,EAAEE,WAAZ;AAAyB,IAAA,SAAS,EAAED,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,KADL,CADJ;AAKH;KAVuBN,I","sourcesContent":["import FeedCard from './FeedCard'\nexport default function Feed({data, type}) { //type can be used to switch update/news\n    const feedData = data || Array(20).fill({})\n    const cards = feedData.map(() => <FeedCard/>)\n    const gridColums = `gridTemplateColumns: 'repeat(${feedData.length/2}, 300px)'`\n    const grid = `w-screen overflow-x-scroll grid grid-rows-2 grid-cols-${feedData.length/2} col-gap-0 no-scrollbar justify-between no-wrap`\n    return(\n        <div style={gridColumns} className={grid}>\n            {cards}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}